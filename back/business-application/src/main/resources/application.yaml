app:
  system: "t-shirt"

server:
  port: 8080

logging:
  pattern:
    console: "%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"
  file:
    path: ./log
    name: ${logging.file.path}/application.log
  logback:
    rollingpolicy:
      max-file-size: 100MB
      max-history: 7
  level:
    root: ERROR
    ru.dorofeev: DEBUG
    orb.hibernate.SQL: ERROR
    org.springframework.transaction: ERROR
    org.springframework.security: ERROR
    org.springframework.cache: ERROR

spring:
  main:
    banner-mode: OFF
  profiles:
    default: default
  config:
    import: optional:file:docker/.env[.properties]
  datasource:
    url: ${POSTGRES_HOST}/${POSTGRES_DB}?prepareThreshold=0&targetServerType=primary
    username: ${POSTGRES_USR}
    password: ${POSTGRES_PWD}
  liquibase:
    enabled: true
    change-log: classpath:liquibase/changelog/changelog.yaml
  jpa:
    hibernate:
      ddl-auto: validate
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    properties:
      hibernate:
        default_batch_fetch_size: 5
        batch_fetch_style: dynamic
        query:
          fail_on_pagination_over_collection_fetch: true

management:
  endpoint:
    health:
      probes:
        enabled: true
      show-details: when_authorized
  endpoints:
    web:
      exposure:
        include: health, prometheus
  prometheus:
    metrics:
      export:
        enabled: true
  metrics:
    distribution:
      percentiles-histogram:
        "[http.server.requests]": true

springdoc:
  api-docs:
    enabled: false

http-client:
  timeout:
    read: 30000
    write: 30000
    connection: 5000

file-manager:
  file:
    extension:
      - png
      - jpg
      - jpeg
      - svg
      - gif
  s3:
    s3-credentials-key-access-id: ${S3_CREDENTIALS_KEY_ACCESS_ID}
    s3-credentials-key-access-secret: ${S3_CREDENTIALS_KEY_ACCESS_SECRET}
    region: ${S3_REGION}
    http-netty-client-connection-time-out: 10s
    http-netty-client-read-time-out: 5m
    http-netty-client-write-time-out: 5m
    http-netty-client-max-concurrency: 100
    s3-client-api-call-time-out: 15m
    s3-client-api-call-attempt-timeout: 5m
    s3-client-retry-policy-max-attempts: 3
    s3-client-retry-policy-backoff-fixed-delay: 3s
