services:
  postgres:
    container_name: postgres-18.0
    image: postgres:18.0
    ports:
      - "5432:5432"
    restart: on-failure
    volumes:
      - ./volumes/postgresql/18.0/data:/var/lib/postgresql
    env_file:
      - .env
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USR}
      - POSTGRES_PASSWORD=${POSTGRES_PWD}
  back:
    build:
      context: ..
      dockerfile: /docker/builder/back/Dockerfile
    container_name: marketplace-back
    ports:
      - "8080:8080"
    restart: always
    volumes:
      - ./volumes/application/log:/log
    depends_on:
      postgres:
        condition: service_started
    env_file:
      - .env
    environment:
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USR=${POSTGRES_USR}
      - POSTGRES_PWD=${POSTGRES_PWD}
  storage:
    container_name: minio-s3-storage
    image: minio/minio:RELEASE.2025-04-22T22-12-26Z
    ports:
      - "9000:9000"
      - "9001:9001"
    restart: on-failure
    volumes:
      - ./volumes/storage/minio-s3/data:/data
    env_file:
      - .env
    environment:
      - MINIO_ROOT_USER=${MINIO_ADMIN_USR}
      - MINIO_ROOT_PASSWORD=${MINIO_ADMIN_PWD}
    command: server /data --console-address ":9001"
  prometheus:
    container_name: prometheus
    image: prom/prometheus
    ports:
      - "9090:9090"
    restart: on-failure
    volumes:
      - ./volumes/prometheus:/prometheus
      - ./configuration/prometheus/prometheus.yaml:/etc/prometheus/prometheus.yml
  grafana:
    container_name: grafana
    image: grafana/grafana
    ports:
      - "3000:3000"
    restart: on-failure
    volumes:
      - ./volumes/grafana:/var/lib/grafana
      - ./configuration/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./configuration/grafana/datasources:/etc/grafana/provisioning/datasources
    env_file:
      - .env
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USR}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PWD}
